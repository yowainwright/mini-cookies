{"version":3,"sources":["../src/state-manager.ts","../src/mini-cookies.ts","../src/utils.ts"],"sourcesContent":["import { SetUpdatedState, State } from \"./types\";\n\nexport function setUpdatedState({ id, name, value, attrs }: SetUpdatedState) {\n  const currentStorage = localStorage.getItem(id);\n  const currentState = (\n    currentStorage ? JSON.parse(currentStorage) : {}\n  ) as State;\n  if (value) {\n    const updatedState = {\n      ...currentState,\n      [name]: {\n        name,\n        value,\n        ...(Object.keys(attrs).length ? { attrs } : {}),\n      },\n    };\n    localStorage.setItem(id, JSON.stringify(updatedState));\n  } else if (Object.keys(currentState).length) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { [name]: deleted, ...updatedState } = currentState;\n    localStorage.setItem(id, JSON.stringify(updatedState));\n  }\n}\n","import { setCookieAttributes, setCookieList } from \"./utils\";\nimport {\n  CookieAttributes,\n  CookieFactory,\n  Options,\n  SetUpdatedState,\n} from \"./types\";\n\n// Conditionally import state manager only when hasState is used\nlet setUpdatedStateFunc: ((params: SetUpdatedState) => void) | null = null;\n\nconst ensureStateManager = async () => {\n  if (!setUpdatedStateFunc) {\n    const module = await import(\"./state-manager\");\n    setUpdatedStateFunc = module.setUpdatedState;\n  }\n  return setUpdatedStateFunc;\n};\n\nconst hasStateOption = {\n  [\"mini-cookies\"]: {\n    note: \"If trying to use mini-cookie state, the hasState option must be set to true 👌\",\n    docs: \"https://github.com/yowainwright/mini-cookies#minicookiesoptions\",\n  },\n};\n\n/**\n * Mini Cookies 🍪\n * @description a just-a-few-lines-of-code cookie manager\n * @param {object} options no options yet\n * @returns {object} a cookie manager factory function\n */\nexport default function miniCookies({\n  debug = false,\n  hasState = false,\n  id = \"mini-cookies-state\",\n}: Options = {}): CookieFactory {\n  return {\n    hasState,\n    isDebugging: debug,\n    id,\n    setCookieList,\n\n    // returns a cookie value if available\n    get(name: string): string | void {\n      const cookies = this.setCookieList();\n      const value = cookies[name]\n        ? decodeURIComponent(cookies[name])\n        : undefined;\n      if (this.isDebugging)\n        console.debug({\n          [\"mini-cookies\"]: { name, value },\n        });\n      if (value) return value;\n    },\n\n    // updates mini-cookie temp state\n    updateState(name: string, value: string, attrs: CookieAttributes = {}) {\n      if (!this.hasState) {\n        if (this.isDebugging) console.info(hasStateOption);\n        return this;\n      }\n      // Use cached function if available, otherwise load dynamically\n      if (setUpdatedStateFunc) {\n        setUpdatedStateFunc({ id: this.id, name, value, attrs });\n      } else {\n        ensureStateManager().then((func) => {\n          func({ id: this.id, name, value, attrs });\n        });\n      }\n      return this;\n    },\n\n    clearState() {\n      if (!this.hasState) return this;\n      localStorage.removeItem(this.id);\n      this.remove(this.id);\n      return this;\n    },\n\n    // returns log of state\n    review() {\n      if (this.hasState) {\n        const currentStorage = localStorage.getItem(this.id);\n        const currentState = currentStorage ? JSON.parse(currentStorage) : {};\n        if (this.isDebugging)\n          console.info({\n            [\"mini-cookies\"]: currentState,\n          });\n        return currentState;\n      } else if (this.isDebugging) console.info(hasStateOption);\n    },\n\n    // sets a cookie with attributes\n    set(name: string, value: string, attrs: CookieAttributes = {}) {\n      const cookieValue = encodeURIComponent(value);\n      const cookieAttributes = setCookieAttributes(attrs);\n      document.cookie = `${name}=${cookieValue};${cookieAttributes}`;\n      // Fire and forget - don't wait for state update\n      this.updateState(name, value, attrs);\n      return this;\n    },\n\n    // removes a cookie by setting it's expires attribute to -1 and value to empty\n    remove(name: string) {\n      this.set(name, \"\", { days: -1 });\n      // Fire and forget - don't wait for state update\n      this.updateState(name, \"\");\n      return this;\n    },\n  };\n}\n","import { CookieAttributes, CookieDictionary } from \"./types\";\n\n// let domain be assigned by browser unless specified\nconst secureAttributes = [\"secure\", \"__Secure-\", \"samesite\"];\nconst strictPathAttributes = [\"path\", \"__Host-\"];\n\n/**\n * setCookieAttributes\n * @description a cookie attribute manager\n * @param {object} attrs cookie attributes\n * @returns {string}\n */\nexport function setCookieAttributes(attrs: CookieAttributes = {}): string {\n  const items = Object.keys(attrs);\n  if (!items.length) return \"\";\n  // set secure attributes\n  const isSecureProtocol = document.location.protocol === \"https:\";\n  const hasIsSecureAttr =\n    items.find((item) => item === \"isSecure\") && isSecureProtocol;\n  const hasIsStrict =\n    items.find((item) => item === \"isStrictSecure\") && isSecureProtocol;\n  let updatedAttrs = items;\n  if (hasIsStrict) {\n    // merge secure attributes\n    // remove domain if added\n    updatedAttrs = items\n      .concat(secureAttributes, strictPathAttributes)\n      .filter((item) => item !== \"domain\");\n  } else if (hasIsSecureAttr) {\n    updatedAttrs = items.concat(secureAttributes);\n  }\n\n  // prefer days over expires attribute\n  const filteredAttrs = updatedAttrs.every((attr) =>\n    [\"days\", \"expires\"].includes(attr),\n  )\n    ? updatedAttrs.filter((attr) => attr !== \"expires\")\n    : updatedAttrs;\n\n  // return attributes with booleans  and key value pairs\n  return filteredAttrs.reduce((str, attr) => {\n    const isTruthyAttr = secureAttributes.concat([\"__Host-\"]).includes(attr);\n    // return truthy attributes w/o values\n    if (isTruthyAttr) str += `; ${attr}`;\n    // secure specific values\n    if (attr === \"sameSite\" && hasIsSecureAttr) str += `; ${attr}=strict`;\n    if (attr === \"path\" && hasIsStrict) str += `; ${attr}=/`;\n    // return days helper as expires\n    else if (attr === \"days\")\n      str += `; expires=${new Date(\n        Date.now() + ((attrs[attr] as number) || 0) * 864e5,\n      ).toUTCString()};`;\n    // return all other key value string pairs\n    else str += `; ${attr}=${attrs[attr as keyof CookieAttributes]}`;\n    return str;\n  }, \"\");\n}\n\n/**\n * setCookieList\n * @description returns a cookie dictionary\n * @returns {object}\n */\nexport function setCookieList(): CookieDictionary {\n  return document.cookie\n    .split(\";\")\n    .map((cookie: string) => cookie.split(\"=\"))\n    .reduce(\n      (list, [key, value]) => ({\n        ...list,\n        [key.trim()]: decodeURIComponent(value),\n      }),\n      {},\n    );\n}\n"],"mappings":"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","names":[]}